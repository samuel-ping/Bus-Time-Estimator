public class App {
	String start;
	String end;
	Bus LX, EE, B, REXL, REXB, H, A, F;
	public App(String s, String e) {
		start = s;
		end = e;
		LX = new Bus(new Stop[] {new Stop("College Avenue Student Center", 5), new Stop("Scott Hall", 2), new Stop("Train Station (by Somerset St)", 3)});
	}

	public String checkBus() {
		if (EE.contains(start, end)) {
			calcTime(EE.route, EE.getStartingIndex(start), EE.getEndingIndex(end));
			numStops(EE.route, EE.getStartingIndex(start), EE.getEndingIndex(end));
			return "EE";
		}
		if (F.contains(start, end)) {
			calcTime(F.route, F.getStartingIndex(start), F.getEndingIndex(end));
			numStops(F.route, F.getStartingIndex(start), F.getEndingIndex(end));
			return "F";
		}
		if (LX.contains(start, end)){
			calcTime(LX.route, LX.getStartingIndex(start), LX.getEndingIndex(end));
			numStops(LX.route, LX.getStartingIndex(start), LX.getEndingIndex(end));
			return "LX";
		}
		if (REXL.contains(start, end)){
			calcTime(REXL.route, REXL.getStartingIndex(start), REXL.getEndingIndex(end));
			numStops(REXL.route, REXL.getStartingIndex(start), REXL.getEndingIndex(end));
			return "REXL";
		}
		if (B.contains(start, end)){
			calcTime(B.route, B.getStartingIndex(start), B.getEndingIndex(end));
			numStops(B.route, B.getStartingIndex(start), B.getEndingIndex(end));
			return "B";
		}
		if (A.contains(start, end)){
			calcTime(A.route, A.getStartingIndex(start), A.getEndingIndex(end));
			numStops(A.route, A.getStartingIndex(start), A.getEndingIndex(end));
			return "A";
		}
		if (H.contains(start, end)){
			calcTime(H.route, H.getStartingIndex(start), H.getEndingIndex(end));
			numStops(H.route, H.getStartingIndex(start), H.getEndingIndex(end));
			return "H";
		}
		if (REXB.contains(start, end)){
			calcTime(REXB.route, REXB.getStartingIndex(start), REXB.getEndingIndex(end));
			numStops(REXB.route, REXB.getStartingIndex(start), REXB.getEndingIndex(end));
			return "REXB";
		}
		return "No buses take you to this place";

	}

	public int calcTime(Stop[] r, int startIndex, int endIndex) {
		int totalTime = 0;
		if (endIndex < startIndex) {
			for (int i = startIndex; i < r.length; i++) {
				totalTime = r[i].getTime() + totalTime;
			}
			for (int j = 0; j < endIndex; j++) {
				totalTime = r[j].getTime() + totalTime;
			}
		} else {
			for (int i = startIndex; i < endIndex; i++) {
				totalTime = r[i].getTime() + totalTime;
			}
		}
		
		return totalTime;
	}
	
	public int numStops(Stop[] r, int startIndex, int endIndex) {
		int totalStops = 0;
		if (endIndex < startIndex) {
			for (int i = startIndex; i < r.length; i++) {
				totalStops++;
			}
			for (int j = 0; j < endIndex; j++) {
				totalStops++;
			}
		} else {
			for (int i = startIndex; i < endIndex; i++) {
				totalStops++;
			}
		}
		
		return totalStops;
	}
}
